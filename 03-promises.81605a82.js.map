{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACeC,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAYC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAMO,cAEJC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAOH,OAAOH,EAAOI,OAE3BG,QAAQC,IAAI,sBAGZ,IAAIC,EAAQP,EACRQ,EAAS,EAEbC,YAAW,KACTC,aAAY,KAeV,GAAIF,EAASJ,EACX,OAAOO,cArBG,GAMZ,IAAuBC,EAAUjB,GAAViB,EAkBTJ,EAlBmBb,EAkBXY,EAjBpBF,QAAQC,IAAIC,GACZA,GAASJ,EACTE,QAAQC,IAAIE,GACZA,GAAU,EACH,IAAIK,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,C,SAAEF,E,MAAUjB,IAEpBoB,EAAO,C,SAAEH,E,MAAUjB,QAStBuB,MAAK,EAACN,SAAEA,EAAQjB,MAAEA,MACjBU,QAAQC,IAAI,uBAAqBM,QAAiBjB,OAClDR,EAAAgC,OAAOC,QAAQ,qBAAqBR,QAAejB,MAAW,CAC5D0B,QAAS,SAGZC,OAAM,EAACV,SAAEA,EAAQjB,MAAEA,MAClBU,QAAQC,IAAI,sBAAoBM,QAAejB,OAC/CR,EAAAgC,OAAOI,QAAQ,oBAAoBX,QAAejB,MAAW,CAC3D0B,QAAS,WAGdlB,KACFH","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n  const form = document.querySelector(\".form\");\n\n  form.addEventListener(\"submit\", handleSubmit);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      elements: { delay, step, amount },\n    } = event.currentTarget;\n\n    const firstDelay = Number(delay.value);\n    const delayStep = Number(step.value);\n    const iter = Number(amount.value);\n\n    console.log('Button was clicked');\n\n    const timerId = 0;\n    let steps = firstDelay;\n    let number = 1;\n\n    setTimeout(() => {\n      setInterval(() => {\n        function createPromise(position, delay) {\n          console.log(steps);\n          steps += delayStep;\n          console.log(number);\n          number += 1;\n          return new Promise((resolve, reject) => {\n            const shouldResolve = Math.random() > 0.3;\n            if (shouldResolve) {\n              resolve({ position, delay });\n            } else {\n              reject({ position, delay });\n            }\n          });\n        }\n        if (number > iter) {\n          return clearInterval(timerId);\n        }\n\n        createPromise(number, steps)\n          .then(({ position, delay }) => {\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n              timeout: 6000,\n            });\n          })\n          .catch(({ position, delay }) => {\n            console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n            Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n              timeout: 6000,\n            });\n          });\n      }, delayStep);\n    }, firstDelay);\n  }\n\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","event","preventDefault","elements","delay","delay1","step","amount","currentTarget","firstDelay","Number","value","delayStep","iter","console","log","steps","number","setTimeout","setInterval","clearInterval","position","Promise","resolve","reject","Math","random","then","Notify","success","timeout","catch","failure"],"version":3,"file":"03-promises.81605a82.js.map"}
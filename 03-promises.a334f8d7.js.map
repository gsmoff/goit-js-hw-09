{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAbMO,SAASC,cAAc,SAE/BC,iBAAiB,UAetB,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGrBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAOH,OAAOF,EAAOG,OAE3BG,QAAQC,IAAI,sBACZ,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAMG,GAAK,EAC9B3B,EAAc2B,EAAGP,EAAaG,EAAaA,EAAYI,GACpDC,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBuB,QAAQC,IAAI,uBAAwCI,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OAC1DJ,EAAAiC,OAAOC,QAAQ,qBAAoCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,MAAK,CAC5D+B,QAAS,SAGZC,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBuB,QAAQC,IAAI,sBAAqCI,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACvDJ,EAAAiC,OAAOI,QAAQ,oBAAmCL,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,MAAK,CAC3D+B,QAAS,Y","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const firstDelay = Number(delay.value);\n  const delayStep = Number(step.value);\n  const iter = Number(amount.value);\n\n  console.log('Button was clicked');\n  for (let i = 1; i <= iter; i += 1) {\n    createPromise(i, firstDelay - delayStep + (delayStep * i))\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 6000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          timeout: 6000,\n        });\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","firstDelay","Number","value","delayStep","iter","console","log","i","then","param","concat","Notify","success","timeout","catch","failure"],"version":3,"file":"03-promises.a334f8d7.js.map"}